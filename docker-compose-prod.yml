version: '3'
services:
  api:
    build:
      dockerfile: Dockerfile
      context: ./staging
    depends_on:
      - "db"
    environment:
      SCOUT_STAGE_URL: http://localhost:8000/v1/request/batchstage
      DBUSER: ${POSTGRES_USER}
      DBPASSWORD: ${POSTGRES_PASSWORD}
      DBHOST: db
      DBNAME: staging
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
  nginx:
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - '443:443'
      - '80:80'
    depends_on:
      - "api"
    volumes:
      - ./config:/etc/nginx/certs
  kafkad:
    build:
      dockerfile: Dockerfile
      context: ./staging
    command: pipenv run python kafkad.py
    environment:
      MWA_TOPIC: mwa
      KAFKA_SERVER: kafka:9092
      ASVO_URL: http://api:8000/jobresult
      SCOUT_QUERY_URL: http://api:8000/v1/file
      DBUSER: ${POSTGRES_USER}
      DBPASSWORD: ${POSTGRES_PASSWORD}
      DBHOST: db
      DBNAME: staging
volumes:
  pgdata: